#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH
cartridge_type="python-$OPENSHIFT_PYTHON_VERSION"

#  Source in the utility functions.
pycart_dir="${OPENSHIFT_PYTHON_DIR}"
source "$pycart_dir/lib/util"
source "$pycart_dir/versions/$OPENSHIFT_PYTHON_VERSION/lib/utils"

NGINX_CFG_FILE=$pycart_dir/versions/shared/etc/conf/nginx.conf
NGINX_PID_FILE=$pycart_dir/run/nginx.pid
PYTHON_PID_FILE=$pycart_dir/run/appserver.pid

function _start_service() {
   if is_running; then
      echo "$cartridge_type application is already running" 1>&2
      return 0
   fi

   start_nginx

   pushd $OPENSHIFT_REPO_DIR > /dev/null
   source "$pycart_dir/bin/activate_virtenv"

   nohup python -u app.py > "$pycart_dir/logs/appserver.log" 2>&1 &
   pid=$!
   echo "$pid" > "$PYTHON_PID_FILE"

   sleep 5

   #BZ 908673
   #popd > /dev/null

}  #  End of function  _start_service.


function _stop_service() {
   stop_service_by_pid $NGINX_PID_FILE
   stop_service_by_pid $PYTHON_PID_FILE

}  #  End of function  _stop_service.


function _restart_service() {
   _stop_service  ||  :
   _start_service

}  #  End of function  _restart_service.


function status() {
   if output=$(curl http://$OPENSHIFT_PYTHON_WSGI_IP:$OPENSHIFT_PYTHON_WSGI_PORT/ &> /dev/null)
   then
      client_result "Application is running"
      client_result $output
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function build() {
   $pycart_dir/versions/$OPENSHIFT_PYTHON_VERSION/bin/build
}

function deploy() {
   $pycart_dir/versions/$OPENSHIFT_PYTHON_VERSION/bin/deploy
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_PYTHON_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_PYTHON_LOG_DIR/*
}

case "$1" in
   start)                    _start_service    ;;
   graceful-stop|stop)       _stop_service     ;;
   restart|reload|graceful)  _restart_service  ;;
   status)                   status            ;;
   build)                    build             ;;
   deploy)                   deploy            ;;
   tidy)                     tidy              ;;
esac

